{"version":3,"sources":["../src/Regl.js"],"names":["batchChildren","children","length","reduce","accum","child","idx","orgArray","data","drawCommand","key","toString","Array","push","Object","values","topDownDrawScopes","node","forEach","Regl","_debugID","_reactInternalInstance","width","props","window","innerWidth","height","innerHeight","type","canvasRef","canvas","refs","regl","renderers","onFrame","frame","transaction","ReactReconcileTransaction","getPooled","perform","mountAndInjectChildren","assign","get","_context","release","drawScope","oldProps","updateChildren","clear","prototype"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;;;;;;;AAGA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAACC,QAAD,EAAc;AAClC,MAAG,CAACA,QAAJ,EAAa;AACX,WAAO,EAAP;AACD;;AAED,MAAGA,SAASC,MAAT,KAAoB,CAAvB,EAAyB;AACvB,WAAOD,QAAP;AACD;;AAED,SAAOA,SAASE,MAAT,CAAgB,UAACC,KAAD,EAAQC,KAAR,EAAeC,GAAf,EAAoBC,QAApB,EAAiC;AACtD,QAAGF,MAAMJ,QAAT,EAAkB;AAChBG,uBAAeE,GAAf,IAAwBD,KAAxB;AACD;;AAED,QAAG,CAACA,MAAMG,IAAN,CAAWC,WAAf,EAA2B;AACzBL,8BAAsBE,GAAtB,IAA+BD,KAA/B;AACD;;AAED,QAAG,CAACA,MAAMJ,QAAP,IAAmBI,MAAMG,IAAN,CAAWC,WAAjC,EAA6C;AAC3C,UAAMC,YAASL,MAAMG,IAAN,CAAWC,WAAX,IAA0BJ,MAAMG,IAAN,CAAWC,WAAX,CAAuBE,QAAvB,EAAnC,CAAN;AACA,UAAG,CAACP,MAAMM,GAAN,CAAJ,EAAe;AACb,YAAMF,OAAO,IAAII,KAAJ,EAAb;AACAJ,aAAKC,WAAL,GAAmBJ,MAAMG,IAAN,CAAWC,WAA9B;AACAL,cAAMM,GAAN,IAAa;AACXF,gBAAMA;AADK,SAAb;AAGD;;AAED,aAAOH,MAAMG,IAAN,CAAWC,WAAlB;AACAL,YAAMM,GAAN,EAAWF,IAAX,CAAgBK,IAAhB,CAAqBR,MAAMG,IAA3B;AACD;;AAED,WAAQF,QAAQC,SAASL,MAAT,GAAkB,CAA3B,IAAiCY,OAAOC,MAAP,CAAcX,KAAd,CAAjC,IAAyDA,KAAhE;AACD,GAxBM,EAwBJ,EAxBI,CAAP;AAyBD,CAlCD;;AAoCA,IAAMY,oBAAoB,SAApBA,iBAAoB,CAACC,IAAD,EAAU;AAClC,MAAG,CAACA,IAAJ,EAAS;AAAE,WAAO,YAAM,CAAE,CAAf;AAAiB;;AAE5B,MAAG,CAACA,KAAKhB,QAAN,IAAkBgB,KAAKT,IAAL,CAAUC,WAA/B,EAA2C;AACzC,WAAO,YAAM;AACXQ,WAAKT,IAAL,CAAUC,WAAV,CAAsBQ,KAAKT,IAA3B;AACD,KAFD;AAGD;;AAED,MAAGS,KAAKhB,QAAR,EAAiB;AACf,QAAMA,WAAWD,cAAciB,KAAKhB,QAAnB,CAAjB;;AAEA,QAAGgB,KAAKT,IAAL,CAAUC,WAAb,EAAyB;AACvB,aAAO,YAAM;AACXQ,aAAKT,IAAL,CAAUC,WAAV,CAAsBQ,KAAKT,IAA3B,EAAiC,YAAM;AACrCP,mBAASiB,OAAT,CAAiB,UAACb,KAAD,EAAW;AAC1BW,8BAAkBX,KAAlB;AACD,WAFD;AAGD,SAJD;AAKD,OAND;AAOD;;AAED,QAAG,CAACY,KAAKT,IAAL,CAAUC,WAAd,EAA0B;AACxB,aAAO,YAAM;AACXR,iBAASiB,OAAT,CAAiB,UAACb,KAAD,EAAW;AAC1BW,4BAAkBX,KAAlB;AACD,SAFD;AAGD,OAJD;AAKD;AACF;;AAED,SAAO,YAAM,CAAE,CAAf;AACD,CAhCD;;IAmCMc,I;;;;;;;;;;;wCACgB;AAClB,WAAKC,QAAL,GAAgB,KAAKC,sBAAL,CAA4BD,QAA5C;;AAEA,UAAME,QAAS,KAAKC,KAAL,CAAWD,KAAX,IAAoBE,OAAOC,UAA1C;AACA,UAAMC,SAAS,KAAKH,KAAL,CAAWG,MAAX,IAAqBF,OAAOG,WAA3C;;AAEA,WAAKV,IAAL,GAAY,4BAAZ;AACA,WAAKA,IAAL,CAAUW,IAAV,GAAiB,MAAjB;;AAEA,UAAMC,YAAY,KAAKN,KAAL,CAAWO,MAAX,IAAqB,KAAKC,IAAL,CAAUD,MAAjD;;AAEA,UAAME,OAAO,oBAASH,SAAT,CAAb;AACAG,WAAKC,SAAL,GAAiB,EAAjB;AACA,WAAKD,IAAL,GAAYA,IAAZ;;AAEA,UAAG,KAAKT,KAAL,CAAWW,OAAd,EAAsB;AACpBF,aAAKG,KAAL,CAAW,KAAKZ,KAAL,CAAWW,OAAtB;AACD;;AAED,UAAME,cAAc,uBAAaC,yBAAb,CAAuCC,SAAvC,EAApB;AACAF,kBAAYG,OAAZ,CACE,KAAKC,sBADP,EAEE,IAFF,EAGE,KAAKjB,KAAL,CAAWtB,QAHb,EAIEmC,WAJF,EAKEtB,OAAO2B,MAAP,CAAc,EAAd,EAAkB,2BAAiBC,GAAjB,CAAqB,IAArB,EAA2BC,QAA7C,EAAuD,EAAEX,UAAF,EAAvD,CALF;;AAQA,6BAAaK,yBAAb,CAAuCO,OAAvC,CAA+CR,WAA/C;;AAEA,WAAKS,SAAL,GAAiB7B,kBAAkB,KAAKC,IAAvB,CAAjB;AACA,WAAK4B,SAAL;AACD;;;uCAEkBC,Q,EAAU;AAC3B,UAAMV,cAAc,uBAAaC,yBAAb,CAAuCC,SAAvC,EAApB;AACAF,kBAAYG,OAAZ,CACE,KAAKQ,cADP,EAEE,IAFF,EAGE,KAAKxB,KAAL,CAAWtB,QAHb,EAIEmC,WAJF,EAKEtB,OAAO2B,MAAP,CAAc,EAAd,EAAkB,2BAAiBC,GAAjB,CAAqB,IAArB,EAA2BC,QAA7C,EAAuD,EAAEX,MAAM,KAAKA,IAAb,EAAvD,CALF;AAOA,6BAAaK,yBAAb,CAAuCO,OAAvC,CAA+CR,WAA/C;;AAGA,UAAG,KAAKb,KAAL,CAAWyB,KAAd,EAAoB;AAClB,aAAKhB,IAAL,CAAUgB,KAAV,CAAgB,KAAKzB,KAAL,CAAWyB,KAA3B;AACD;;AAED,WAAKH,SAAL;AACD;;;6BAEQ;AACP,UAAG,KAAKtB,KAAL,CAAWO,MAAd,EAAqB;AACnB,eAAO,IAAP;AACD;;AAHM,mBAKmB,KAAKP,KALxB;AAAA,UAKCD,KALD,UAKCA,KALD;AAAA,UAKQI,MALR,UAKQA,MALR;;AAMP,aACE,0CAAQ,KAAI,QAAZ,EAAqB,OAAOJ,KAA5B,EAAmC,QAAQI,MAA3C,GADF;AAGD;;;;;;AAGHZ,OAAO2B,MAAP,CAActB,KAAK8B,SAAnB;kBACe9B,I","file":"Regl.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport ReglInit from 'regl';\n\nimport ReactUpdates from 'react-dom/lib/ReactUpdates';\nimport ReactInstanceMap from 'react-dom/lib/ReactInstanceMap';\n\nimport ContainerMixin from './ContainerMixin';\n\nimport Node from 'display-tree';\n\n\nconst batchChildren = (children) => {\n  if(!children){\n    return []\n  }\n\n  if(children.length === 1){\n    return children;\n  }\n\n  return children.reduce((accum, child, idx, orgArray) => {\n    if(child.children){\n      accum[`scope-${idx}`] = child;\n    }\n\n    if(!child.data.drawCommand){\n      accum[`scope-nodraw-${idx}`] = child;\n    }\n\n    if(!child.children && child.data.drawCommand){\n      const key = `${child.data.drawCommand && child.data.drawCommand.toString()}`;\n      if(!accum[key]){\n        const data = new Array();\n        data.drawCommand = child.data.drawCommand;\n        accum[key] = {\n          data: data,\n        }\n      }\n      \n      delete child.data.drawCommand;\n      accum[key].data.push(child.data);\n    }\n    \n    return (idx === orgArray.length - 1) && Object.values(accum) || accum;\n  }, {});\n}\n\nconst topDownDrawScopes = (node) => {\n  if(!node){ return () => {};}\n\n  if(!node.children && node.data.drawCommand){\n    return () => {\n      node.data.drawCommand(node.data);\n    }\n  }\n\n  if(node.children){\n    const children = batchChildren(node.children);\n\n    if(node.data.drawCommand){\n      return () => {\n        node.data.drawCommand(node.data, () => {\n          children.forEach((child) => {\n            topDownDrawScopes(child)();\n          })\n        });\n      }\n    }\n\n    if(!node.data.drawCommand){\n      return () => {\n        children.forEach((child) => {\n          topDownDrawScopes(child)();\n        });      \n      }\n    }\n  }\n\n  return () => {};\n};\n\n\nclass Regl extends Component {\n  componentDidMount() {\n    this._debugID = this._reactInternalInstance._debugID;\n    \n    const width  = this.props.width || window.innerWidth;\n    const height = this.props.height || window.innerHeight;\n    \n    this.node = Node();\n    this.node.type = \"Regl\";\n\n    const canvasRef = this.props.canvas || this.refs.canvas;\n\n    const regl = ReglInit(canvasRef);\n    regl.renderers = {};\n    this.regl = regl;\n\n    if(this.props.onFrame){\n      regl.frame(this.props.onFrame);\n    }\n\n    const transaction = ReactUpdates.ReactReconcileTransaction.getPooled();\n    transaction.perform(\n      this.mountAndInjectChildren,\n      this,\n      this.props.children,\n      transaction,\n      Object.assign({}, ReactInstanceMap.get(this)._context, { regl })\n    );\n    \n    ReactUpdates.ReactReconcileTransaction.release(transaction);\n\n    this.drawScope = topDownDrawScopes(this.node);\n    this.drawScope();\n  }\n  \n  componentDidUpdate(oldProps) {\n    const transaction = ReactUpdates.ReactReconcileTransaction.getPooled();\n    transaction.perform(\n      this.updateChildren,\n      this,\n      this.props.children,\n      transaction,\n      Object.assign({}, ReactInstanceMap.get(this)._context, { regl: this.regl })\n    );\n    ReactUpdates.ReactReconcileTransaction.release(transaction);\n\n\n    if(this.props.clear){\n      this.regl.clear(this.props.clear);\n    }\n\n    this.drawScope();\n  }\n  \n  render() {\n    if(this.props.canvas){\n      return null;\n    }\n    \n    const { width, height } = this.props;\n    return (\n      <canvas ref=\"canvas\" width={width} height={height} />\n    )\n  }\n}\n\nObject.assign(Regl.prototype, ContainerMixin);\nexport default Regl;\n"]}