{"version":3,"sources":["../src/Draw.js"],"names":["ReglComponent","element","node","subscriptions","listeners","_mountImage","_renderedChildren","_currentElement","_hostNode","construct","props","transaction","nativeParent","nativeContainerInfo","context","nodeProps","drawCommand","rendererKey","btoa","toString","regl","renderers","Object","assign","type","constructor","name","data","children","instance","get","render","ReactReconcileTransaction","getPooled","perform","mountAndInjectChildren","nextComponent","updateTrans","updateChildren","prototype","displayName"],"mappings":"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","file":"Draw.js","sourcesContent":["import Node from 'display-tree';\nimport ReactUpdates from 'react-dom/lib/ReactUpdates';\nimport ContainerMixin from './ContainerMixin';\nimport ReactInstanceMap from 'react-dom/lib/ReactInstanceMap';\n\nexport default class ReglComponent {\n  constructor(element){\n    this.node = null;\n    this.subscriptions = null;\n    this.listeners = null;\n    this._mountImage = null;\n    this._renderedChildren = null;\n    this._currentElement = null;\n    this._hostNode = null;\n    this.construct(element);\n  }\n\n  construct(element) {\n    this._currentElement = element;\n\n    //Oh shit how to update?\n    this.props = this._currentElement.props;\n  }\n\n  getHostNode(){\n    return this.node;\n  }\n\n  getNativeNode() {\n    return this.node;\n  }\n\n  getPublicInstance() {\n    return this.node;\n  }\n\n  unmountComponent(){\n    //debugger;\n  }\n\n  mountComponent(transaction, nativeParent, nativeContainerInfo, context) {    \n    const nodeProps = {};\n    \n    if(this.drawCommand){\n      //Cache the regl renderer for this component on context\n      //TODO more efficent hash than BASE64?    \n      const rendererKey = btoa(this.drawCommand.toString());\n      if(!context.regl.renderers[rendererKey]){\n        context.regl.renderers[rendererKey] = this.drawCommand(context.regl);\n      }\n\n      nodeProps.drawCommand = context.regl.renderers[rendererKey];\n    }\n\n    this.node = Node(Object.assign({}, nodeProps, this._currentElement.props));\n    this.node.type = this.constructor.name;\n    \n    delete this.node.data.children;\n\n    const instance = ReactInstanceMap.get(this);\n\n    let children;\n    if(this.render && this._currentElement.props.children){\n      children = this.render();\n    }\n\n    if(this.render && !this._currentElement.props.children){\n      children = this.render();\n    }\n    \n    if(!this.render && this._currentElement.props.children){\n      children = this._currentElement.props.children;\n    }    \n\n    if(children){\n      const transaction = ReactUpdates.ReactReconcileTransaction.getPooled();\n      transaction.perform(\n        this.mountAndInjectChildren,\n        this,\n        children,\n        transaction,\n        context\n      );\n    }\n    \n    return this.node;    \n  }\n  \n  receiveComponent(nextComponent, transaction, context) {\n    const nodeProps = {};\n    \n    if(this.drawCommand){\n      //Cache the regl renderer for this component on context\n      //TODO more efficent hash than BASE64?    \n      const rendererKey = btoa(this.drawCommand.toString());\n      if(!context.regl.renderers[rendererKey]){\n        context.regl.renderers[rendererKey] = this.drawCommand(context.regl);\n      }\n\n      nodeProps.drawCommand = context.regl.renderers[rendererKey];\n    }    \n    \n    Object.assign(this.node.data, nodeProps, this._currentElement.props, nextComponent.props);\n    this._currentElement = nextComponent;\n    this.props = nextComponent.props;\n\n    let children;\n    if(this.render && !this._currentElement.props.children){\n      children = this.render();\n    }\n    \n    if(!this.render && this._currentElement.props.children){\n      children = this._currentElement.props.children;\n    }\n\n    if(children){\n      const updateTrans = ReactUpdates.ReactReconcileTransaction.getPooled();\n      updateTrans.perform(\n        this.updateChildren,\n        this,\n        children,\n        transaction,\n        context\n      );\n    }\n\n    return this.node;\n  }  \n}\n\nObject.assign(ReglComponent.prototype, ContainerMixin);\nReglComponent.displayName = \"ReglComponent\";\n"]}